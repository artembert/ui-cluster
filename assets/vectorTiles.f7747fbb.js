var k=Object.defineProperty;var f=Object.getOwnPropertySymbols;var S=Object.prototype.hasOwnProperty,R=Object.prototype.propertyIsEnumerable;var u=(o,t,e)=>t in o?k(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e,g=(o,t)=>{for(var e in t||(t={}))S.call(t,e)&&u(o,e,t[e]);if(f)for(var e of f(t))R.call(t,e)&&u(o,e,t[e]);return o};var n=(o,t,e)=>(u(o,typeof t!="symbol"?t+"":t,e),e);import"./modulepreload-polyfill.b7f2da20.js";import{d as C}from"./pie-chart.9a516d1f.js";import{m as v}from"./vendor.6886b79e.js";class b{constructor(t){n(this,"onAdd",t=>{this.map=t;const e=window.devicePixelRatio,{width:r,graphWidth:h,graphHeight:i,color:d,background:p,font:m}=this.options,a=this.container=document.createElement("div");return a.className="mapboxgl-ctrl mapboxgl-ctrl-fps",a.style.backgroundColor=p,a.style.borderRadius="6px",this.readOutput=document.createElement("div"),this.readOutput.style.color=d,this.readOutput.style.fontFamily=m,this.readOutput.style.padding="0 5px 5px",this.readOutput.style.fontSize="9px",this.readOutput.style.fontWeight="bold",this.readOutput.textContent="Waiting\u2026",this.canvas=document.createElement("canvas"),this.canvas.className="mapboxgl-ctrl-canvas",this.canvas.width=r,this.canvas.height=i,this.canvas.style.cssText=`width: ${r/e}px; height: ${i/e}px;`,a.appendChild(this.readOutput),a.appendChild(this.canvas),this.map.on("movestart",this.onMoveStart),this.map.on("moveend",this.onMoveEnd),this.container});n(this,"onMoveStart",()=>{this.frames=0,this.time=performance.now(),this.map.on("render",this.onRender)});n(this,"onMoveEnd",()=>{const t=performance.now();this.updateGraph(this.getFPS(t)),this.frames=0,this.time=null,this.map.off("render",this.onRender)});n(this,"onRender",()=>{this.frames++;const t=performance.now();t>=this.time+1e3&&(this.updateGraph(this.getFPS(t)),this.frames=0,this.time=t)});n(this,"getFPS",t=>(this.totalTime+=t-this.time,this.totalFrames+=this.frames,Math.round(1e3*this.frames/(t-this.time))||0));n(this,"updateGraph",t=>{const{barWidth:e,graphRight:r,graphTop:h,graphWidth:i,graphHeight:d,background:p,color:m}=this.options,a=this.canvas.getContext("2d"),w=Math.round(1e3*this.totalFrames/this.totalTime)||0,c=e;a.fillStyle=p,a.globalAlpha=1,a.fillRect(0,0,i,h),a.fillStyle=m,this.readOutput.textContent=`${t} FPS (${w} Avg)`,a.drawImage(this.canvas,r+c,h,i-c,d,r,h,i-c,d),a.fillRect(r+i-c,h,c,d),a.fillStyle=p,a.globalAlpha=.75,a.fillRect(r+i-c,h,c,(1-t/100)*d)});n(this,"onRemove",()=>(this.map.off("render",this.onRender),this.map.off("movestart",this.onMoveStart),this.map.off("moveend",this.onMoveEnd),this.container.parentNode.removeChild(this.container),this.map=null,this));const e=window.devicePixelRatio,r={background:"rgba(0,0,0,0.9)",barWidth:4*e,color:"#7cf859",font:"Monaco, Consolas, Courier, monospace",graphHeight:60*e,graphWidth:90*e,graphTop:0,graphRight:5*e,width:100*e};this.frames=0,this.totalTime=0,this.totalFrames=0,this.options=g(g({},t),r)}}window.mapboxgl&&(mapboxgl.FrameRateControl=b);const x=document.getElementById("counter"),M=o=>{if(!x)return;const t=o.toString(10).padStart(3);x.innerText="Total:"+t},s=new v.Map({container:"map",zoom:9,minZoom:1,center:[30.3,59.95],style:"https://api.maptiler.com/maps/streets/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL"}),O=new b;s.addControl(O);s.on("load",function(){s.addSource("hexapoint_3000",{type:"vector",tiles:["https://139.geosemantica.ru/martin/public.hexapoint_3000/{z}/{x}/{y}.pbf"]}),s.addLayer({id:"public.hexapoint_3000",type:"circle",source:"hexapoint_3000","source-layer":"public.hexapoint_3000",paint:{"circle-color":"hsla(215,28%,59%, 0.35)","circle-stroke-color":"#7992B4","circle-stroke-width":.5,"circle-radius":["interpolate",["linear"],["get","total"],1,2,10,3.5,100,5,250,6.5,1033,8]}}),s.on("data",function(o){o.sourceId!=="hexapoint_3000"||!o.isSourceLoaded||(s.on("moveend",y),y())})});const F=()=>C([{label:"Food",value:1,color:"#003f5c"},{label:"Party",value:1,color:"#7a5195"},{label:"Rent",value:1,color:"#ef5675"},{label:"Chocolates",value:1,color:"#ffa600"}]),l={};function y(){const o=s.queryRenderedFeatures(void 0,{layers:["public.hexapoint_3000"]});console.log(o),console.log("existingMarkers",Object.keys(l).length),Object.keys(l).filter(t=>!o.map(e=>String(e.properties.id)).includes(t)).forEach(t=>{console.log("remove"),l[t].remove(),delete l[t]}),o.forEach(({geometry:t,properties:e})=>{if(t.type!=="Point")return;if(!e.id)throw Error("id is not provided");if(l[String(e.id)]!==void 0){console.log("marker exists");return}const r=new v.Marker({element:F()});r.setLngLat([t.coordinates[0],t.coordinates[1]]).addTo(s),l[String(e.id)]=r}),console.log("total",Object.keys(l).length),console.log("real",document.querySelectorAll(".maplibregl-marker.mapboxgl-marker").length),M(Object.keys(l).length)}
